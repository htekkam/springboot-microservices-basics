job-service.url=http://job:8082
company-service.url=http://company:8081
review-service.url=http://review:8083

server.port=8083

spring.application.name=review

spring.datasource.url=jdbc:postgresql://postgres:5432/reviews
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database=POSTGRESQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

#eureka.client.service-url.defaultZone=http://servicereg:8761/eureka

#Rabbitmq
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Zipkin
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

#Config server
#spring.config.import=optional:configserver:http://configms:8080

management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=ALWAYS
management.health.circuitbreakers.enabled=true

#resilience4j
# === CIRCUIT BREAKER INSTANCE: companyBreaker ===

# Enable or disable the circuit breaker
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true

# Size of the sliding window (number of calls to keep track of)
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10

# Type of sliding window: COUNT_BASED or TIME_BASED
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=COUNT_BASED

# Minimum number of calls before the failure rate can be calculated
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=10

# Failure rate threshold in percentage (0 to 100)
resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50

# Wait duration in OPEN state before transitioning to HALF-OPEN (e.g., 10s = 10 seconds)
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s

# Number of permitted calls in HALF_OPEN state
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=5

# Duration threshold to consider a call as slow
resilience4j.circuitbreaker.instances.companyBreaker.slow-call-duration-threshold=2s

# Slow call rate threshold in percentage (calls taking longer than threshold)
resilience4j.circuitbreaker.instances.companyBreaker.slow-call-rate-threshold=50

# Optional: Automatic transition from OPEN to HALF_OPEN
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true

#retry prperties
resilience4j.retry.instances.companyRetry.max-attempts=3
resilience4j.retry.instances.companyRetry.wait-duration=2s
resilience4j.retry.instances.companyRetry.retry-exceptions=java.io.IOException

#rate limiter properties
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

